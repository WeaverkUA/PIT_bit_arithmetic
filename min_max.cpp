/*Сьогодні на уроці інформатики учні знайомилися з двійковою
системою числення. Переводити з десяткової системи
числення у двійкову та навпаки учні вже навчилися і тепер
потрібно закріпити матеріал.
Антон запропонував таку вправу для тренування. Із бітів
числа, яке було переведено з десяткової у двійкову систему,
потрібно шляхом перестановки бітів утворити найбільше і
найменше числа. Після цього потрібно знайти їх різницю і
перевести результат у десяткову систему числення. Щоб
перевірити, чи правильно виконується вправа, Антон
звертається до вас по допомогу.
Напишіть програму, яка за даним числом N знаходить різницю
найбільшого та найменшого чисел, що утворюються із бітів
заданого числа. Зверніть увагу, що найбільше число повинно
містити стільки ж бітів, скільки й початкове, тобто у
найбільшого числа найстарший одиничний біт знаходиться на
тій самій позиції, що й найстарший одиничний біт заданого
числа*/


#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int cnt_ones(long long N)
{
    int cnt=0;
    while (N!=0)
    {
        cnt += N & 1;
        N = N >> 1;
    }
    
    return cnt;
}

int cnt_all(long long N)
{
    int cnt=0;
    while (N!=0)
    {
        ++cnt;
        N = N >> 1;
    }
    
    return cnt;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    long long N, ones_cnt, all_cnt, zeros_cnt, max, min;
    cin >> N;
    
    ones_cnt=cnt_ones(N);
    all_cnt=cnt_all(N);
    zeros_cnt=all_cnt-ones_cnt;
    min = (1 << ones_cnt) - 1;
    max = min << zeros_cnt;
    cout << max-min;
    return 0;
}